* My Emacs notes

  To export this document as a markdown file after modifying it, C-c C-e m m
  
  Helpful tips related to configuration and other things related to Emacs that I find useful.

*** How to view the list of all the currently installed packages in Emacs?

If you are using Emacs in one machine,
and if you want to set-up the exact same set-up settings in another machine,
you need to view the list of installed packages from the package manager.

To see a list of the available packages : M-x list-packages

Run this command till you find the first row of installed package: "C-s installed"

Start selecting with C-SPC.

Go down till you reach built-in packages. Copy with M-w. C-x b for new buffer. Paste with C-y.C-x C-s to save file.

Another alternative is, simply copy the ".emacs" file from this computer to the other computer.

------------

*** How to add MELPA as another source of packages in addition to GNU's elpa?
    
    1. Hint: In order to avoid having to do this multiple times when switching between multiple machines, save the `.emacs` settings in GitHub so that you can just move it from machine to machine.
    2. The alternative is:
       In a browser, visit MELPA website.
       Grab the URL for the package archive "https://melpa.org/packages/"
       M-x customize-group -> package -> Go to "package archives" -> "INS" to insert a new entry.
       Provide archive name and archive URL. Set the "State" to "Save for future sessions".

After making changes to the config to add MELPA as a source of packages, run the following two commands:

  1. `M-x` package-refresh-contents (to refresh the list of packages)
  2. `M-x` `package-install` RET (to launch package install mode)
  3. Type the name of the package you are looking for and when you find the package -> RET 

To change to mode from some other mode : M-x evil-mode

------------

*** How to work with org-mode and evil-mode?

    Install evil-mode and turn it on and we should be good to go.
    Vim key bindings will work in Org mode as well.

------------

*** Helpful commands

    Move by screenfuls:

    | Command                    | Description                                                                                                                                                             |
    |----------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | C-v                        | Move forward one screenful                                                                                                                                              |
    | M-v                        | Move backward one screenful                                                                                                                                             |
    | C-l                        | Moving the text around the cursor to the center of the screen, top of the screen and bottom of the screen                                                               |

    Move by lines: (P for previous, N for next, B for backward and F for forward)

			  Previous line, C-p
				  :
				  :
   Backward, C-b .... Current cursor position .... Forward, C-f
				  :
				  :
			    Next line, C-n

   If moving by characters is too slow, you can move by words.  M-f (META-f) moves forward a word and M-b moves back a word.

   When you are in the middle of a word, M-f moves to the end of the word.
   When you are in whitespace between words, M-f moves to the end of the following word.
   M-b works likewise in the opposite direction.

   
   This parallel applies between lines and sentences:
   C-a and C-e move to the beginning or end of a line, and
   M-a and M-e move to the beginning or end of a sentence.



    | Command | Description                        |
    |---------+------------------------------------|
    | C-f     | Move forward a character           |
    | C-b     | Move backward a character          |
    | M-f     | Move forward a word                |
    | M-b     | Move backward a word               |
    | C-n     | Move to next line                  |
    | C-p     | Move to previous line              |
    | C-a     | Move to beginning of line          |
    | C-e     | Move to end of line                |
    | M-a     | Move back to beginning of sentence |
    | M-e     | Move forward to end of sentence    |

    Two other important cursor motion commands are M-< (META Less-than),
    which moves to the beginning of the whole text, and M-> (META
    Greater-than), which moves to the end of the whole text.

    On most terminals, the "<" is above the comma, so you must use the
    shift key to type it.  On these terminals you must use the shift key
    to type M-< also; without the shift key, you would be typing M-comma.

    C-x 1	One window (i.e., kill all other windows).

    Here is a summary of the delete operations:

	<DEL>        Delete the character just before the cursor
	C-d   	     Delete the next character after the cursor

	M-<DEL>      Kill the word immediately before the cursor
	M-d	     Kill the next word after the cursor

	C-k	     Kill from the cursor position to end of line
	M-k	     Kill to the end of the current s


    | Command                    | Description                                                                                                                                                             |
    |----------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | C-x b and C-x C-b          | Switching between buffers                                                                                                                                               |
    | C-g                        | Cancelling half-entered commands                                                                                                                                        |
    | C-h m, C-h k, C-h f, C-h a | Getting help on editing modes,keybindings and commands. (just remember C-h and read the prompt in the minibuffer)                                                       |
    | C-x C-c                    | Quitting Emacs                                                                                                                                                          |
    | C-x k                      | kill buffer                                                                                                                                                             |
    | M-x                        | Invoking commands by name                                                                                                                                               |
    | M-x customize              | to enter customization menu                                                                                                                                             |
    | C-x C-f                    | Visiting (opening) files. (This puts us in Emac's dired mode - directory editor). To create a new file, just start typing the name of the file that you want to create. |
    | C-x C-s                    | Saving files                                                                                                                                                            |
    | g                          | Refresh the listing in dired mode                                                                                                                                       |
    | C-x b * untitled *         | (remove the spaces before and after the asterisks) will open new buffer if not exist                                                                                    |

------------

*** help file

    For information about GNU Emacs and the GNU system, type C-h C-a.
    
    To view documentation on your current major mode, type C-h m.
    
    How to launch help mode on the fly? C-h
    
    To use the Help features, type the C-h character, and then a
    character saying what kind of help you want.  If you are REALLY lost,
    type C-h ? and Emacs will tell you what kinds of help it can give.

    The most basic HELP feature is C-h c.

    To get more information about a command, use C-h k instead of C-h c.

    >> Type C-h k C-p.

    C-h a	Command Apropos.  Type in a keyword and Emacs will list
		all the commands whose names contain that keyword.
		These commands can all be invoked with META-x.
		For some commands, Command Apropos will also list a
		sequence of one or more characters which runs the same
		command.

    >> Type C-h a file <Return>.

    This displays in another window a list of all M-x commands with "file"
    in their names.  You will see character-commands listed beside the
    corresponding command names (such as C-x C-f beside find-file).		

   | C-h i | The info directory |
   
    C-h i	Read included Manuals (a.k.a. Info).  This command puts
		you into a special buffer called "*info*" where you
		can read manuals for the packages installed on your system.
		Type m emacs <Return> to read the Emacs manual.
		If you have never before used Info, type h and Emacs
		will take you on a guided tour of Info mode facilities.
		Once you are through with the tutorial, you should
		consult the Emacs Info manual as your primary documenta

------------

*** .emacs file

If anything goes wrong with the customizations, delete the ".emacs" file in the home directory and start from scratch again.

------------

Where can I find my .emacs file for Emacs running on Windows?

 

If you want to look at the contents of the file:

Within Emacs, ~ at the beginning of a file name is expanded to your HOME directory, so you can always find your .emacs file with C-x C-f ~/.emacs.

 

If you are trying to find out where the file is as opposed to looking at the contents of the file:

It should be stored in the variable user-init-file. Use C-H v user-init-file RET to check. You can also open it directly by using M-x eval-expression RET (find-file user-init-file) RET

------------

*** Resources for emacs

| How to learn Emacs :: About this guide to Emacs - https://david.rothlis.net/emacs/howtolearn.html                     |
| MELPA - http://melpa.org/#/                                                                                           |
| mastering-emacs-in-one-year - https://github.com/redguardtoo/mastering-emacs-in-one-year-guide                        |
| From Vim  to Emacs in Fourteen Days - https://blog.aaronbieber.com/2015/05/24/from-vim-to-emacs-in-fourteen-days.html |
| Howardism - http://howardism.org/                                                                                     |
| Magit User Manual - https://magit.vc/manual/magit/                                                                    |
| The Org Manual - https://orgmode.org/manual/index.html                                                                |
| Org mode beginning at the basics - https://orgmode.org/worg/org-tutorials/org4beginners.html                          |
| EmacsWiki - https://www.emacswiki.org/emacs/SiteMap                                                                   |
| Xah Emacs Site - http://ergoemacs.org/index.html                                                                      |
| https://jaderholm.com/screencasts.html                                                                                |
| https://cestlaz.github.io/stories/emacs/                                                                              |

------------

*** How to auto save an org document in markdown format?
    Install the package 'auto-org-md' and after editing the file in org-mode, switch to it using this : "M-x auto-org-md-mode" to toggle the auto save to markdown functionality on and off.

------------

*** Line numbers

    How to show line numbers in files in emacs?

    emacs has 2 line numbers mode.
    
    Alt+x linum-mode ? old, hack, slow. Emacs 23 (released in 2009).
    
    Alt+x global-display-line-numbers-mode ? Emacs 26 (released in 2018-05)
     
    Add the following line to the .emacs file to make it the default behavior:
    (global-display-line-numbers-mode)

------------

*** Exporting

At some point you might want to print your notes, publish them on the web, or share them with people not using Org.
Org can convert and export documents to a variety of other formats while retaining as much structure (see Document Structure) and markup (see Markup for Rich Contents) as possible.  

Use C-c C-e to launch the export command and then use the options displayed to make selections.
e.g. to export as a UTF-8 plain text file, select 't' and 'u'

------------

*** Search in current buffer
    
emacs isearch. Ctrl+s

While in isearch:

Ctrl+s → Jump to next occurrence
Ctrl+r → Jump to previous occurrence.
Ctrl+g → Exit and place cursor at original position.
Enter → exit and place cursor at current position.

------------

*** Magit tips

    (When this gets reasonably big, pull this section into a separate file of its own.)
    To launch magit when you are editing a file that is in a git repository, `C-c g`

    To see the diff version of a file in the magit status page, with the mouse on that file, hit `tab`. To close the diff view, hit tab again.

    After staging all the files we want to commit, to commit them, hit `C-c C-c`
    Enter a commit message and hit `C-c C-c`

    After you have a commit, to push it to the remote repository, hit `P`. It gives you options about where to push it and some other details.

------------

*** Dired tips

Deleting Files with Dired

    d
    Flag this file for deletion (dired-flag-file-deletion).
    
    u
    Remove the deletion flag (dired-unmark).
    
    x
    Delete files flagged for deletion (dired-do-flagged-delete).

------------

*** Find the answers for the following:

   1. Go to the beginning of the file
   1. Go to the end of the file
   1. Using  marks in a file/directory
   1. Repeat command (the equivalent of . - the dot command in Vim)
   1. How to search in an entire directory for a word and replace it?
   1. How to search in an entire directory for a specific file?
   1. How to org files appear in Github? Do we have to explicitly export them as markdown files or can we just save them as org files and still view them in a nice format in Github?
   1. How to remapping capslock key to  Ctrl
   1. Convert a word from smaller case to upper case, upper case to smaller case or invert the case of each of the letters in the word.
   1. Go through all the bindings for Vim and find their equivalents for emacs

------------
